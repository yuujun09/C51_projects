C51 COMPILER V9.54   MAN                                                                   05/05/2022 22:38:29 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAN
OBJECT MODULE PLACED IN man.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE man.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "reg52.h"
   2          #include "intrins.h"
   3          #include <math.h>
   4          typedef unsigned char u8;
   5          typedef unsigned int u16;
   6          sbit LSA=P2^2;
   7          sbit LSB=P2^3;
   8          sbit LSC=P2^4;
   9          
  10          u8 code arr[] = {0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,
  11                    0x6f,0x77};
  12          
  13          u8 zero_flag = 0;   //清零标志位
  14          u16 time = 0;
  15          u16 temp = 0;
  16          u16 clock = 3600*4+ 60*59 +25;
  17          u8 h1 = 0;
  18          u8 h2 = 0;
  19          u8 m1 = 0;
  20          u8 m2 = 0;
  21          u8 s1 = 0;
  22          u8 s2 = 0;
  23          
  24          void delay(u16 i)
  25          {
  26   1      while(i--);
  27   1      }
  28          
  29          void timer0Init()  //计时器初始化
  30          {
  31   1        TMOD|=0x01;    //或运算防止拉低电平对之前控制位的影响
  32   1        TH0=0XFC;
  33   1        TL0=0X18;   //FC18对应一毫秒
  34   1        ET0=1;
  35   1        EA=1;
  36   1        TR0=1;
  37   1      }
  38          
  39          void open0()    //INT0中断初始化
  40          {
  41   1        EA=1; //打开CPU总中断
  42   1        EX0=1;  //打开外部中断允许位
  43   1        IT0=1;  //下降沿触发    
  44   1      }
  45          
  46          void open1()  //INT1中断初始化
  47          {
  48   1        EA=1; //打开CPU总中断
  49   1         EX1=1; //打开外部中断允许位
  50   1        IT1=1;  //下降沿触发    
  51   1      }
  52          
  53          void clock_refresh()    //时钟进制换算
  54          {
  55   1        h1 = (clock/36000)%3;
C51 COMPILER V9.54   MAN                                                                   05/05/2022 22:38:29 PAGE 2   

  56   1        h2 = (clock/3600)%10;
  57   1        m1 = (clock/600)%6;
  58   1        m2 = (clock/60)%10;
  59   1        s1 = ((clock)/10)%6;  
  60   1        s2 = clock%10;
  61   1      }
  62          
  63          void display()
  64          {
  65   1        u8 i;
  66   1        
  67   1        for(i=0;i<6;i++)  //刷新6个位
  68   1        {
  69   2        switch(i)
  70   2          {
  71   3          case(0):  LSA=LSB=LSC=0; P0=arr[h1]; break;
  72   3          case(1):  LSA=1;LSB=LSC=0; P0=arr[h2]; break;
  73   3          case(2):  LSA=0;LSB=1;LSC=0; P0=arr[m1];break;
  74   3          case(3):  LSA=LSB=1;LSC=0; P0=arr[m2];break;
  75   3          case(4):  LSA=LSB=0;LSC=1; P0=arr[s1]; break;
  76   3          case(5):  LSA=1;LSB=0;LSC=1; P0=arr[s2];break;
  77   3          //case(6):  LSA=0;LSB=LSC=1; break;
  78   3          //case(7):  LSA=LSB=LSC=1; break;       
  79   3          }  
  80   2        delay(5);
  81   2        P0=0x00;
  82   2        }
  83   1      }
  84          
  85          void main()
  86          {
  87   1        open0();
  88   1        open1();
  89   1        timer0Init();
  90   1        temp = clock;           //保存当前时钟值到temp
  91   1        while(1)
  92   1           {
  93   2           display();
  94   2           }
  95   1      }
  96          
  97          void time0() interrupt 1 //T0中断号为1
  98          {
  99   1        TH0=0XFC;    //方式一需要重新赋初值，方式二能自动重装初值
 100   1        TL0=0X18; 
 101   1        time++;
 102   1        if(time==100)      //1ms*100=0.1s
 103   1        {
 104   2        time=0;
 105   2        clock++;
 106   2        clock_refresh();
 107   2        }
 108   1        display();
 109   1      }
 110          
 111          void zhongduan0() interrupt 0     //启动停止键
 112          {
 113   1        P1 = 1; 
 114   1        if(TR0==1)  //定时器运行中
 115   1        {       
 116   2          TR0 = 0;
 117   2        }
C51 COMPILER V9.54   MAN                                                                   05/05/2022 22:38:29 PAGE 3   

 118   1        else if(TR0==0) //定时器未运行
 119   1        { 
 120   2          if(clock != 0 && zero_flag==1)
 121   2          {
 122   3            clock = temp;
 123   3            zero_flag = 0;
 124   3          }
 125   2          TR0 = 1;
 126   2        }
 127   1        
 128   1        display();
 129   1      }
 130          
 131          void zhongduan1() interrupt 2   //清零键
 132          {
 133   1        temp = clock;           //保存当前时钟值到temp
 134   1        zero_flag = 1;      //清零标志位拉高
 135   1        P1 = 2;
 136   1        clock = 0;            //清零
 137   1        TR0=0;
 138   1        clock_refresh();
 139   1        display();
 140   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    537    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     13    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
